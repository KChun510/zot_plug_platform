services:
  nginx:
    build: ./nginx
    container_name: nginx
    profiles: ["prod"]
    ports:
      - "80:80"
      - "443:443"
    environment:
      - FRONTEND_HOST=frontend
      - BROKER_HOST=broker 
      - API_HOST=api
    volumes:
      - /home/certs/etc:/etc/letsencrypt
      - /home/certs:/data/letsencrypt
    networks:
      - zotplug_net
    depends_on:
      - frontend

  certbot:
    build: ./certbot
    container_name: certbot
    profiles: ["prod"]
    restart: unless-stopped
    volumes:
      - /home/certs/etc:/etc/letsencrypt
      - /home/certs:/data/letsencrypt
    networks:
      - zotplug_net

  frontend:
    image: zotpluguci/zot_plug_frontend:beta
    container_name: zot_plug_frontend
    profiles: ["prod"]
    expose:
      - "3000"
    environment:
      - BASE_URL=http://api:4000
    restart: unless-stopped
    networks:
      - zotplug_net
    depends_on:
      - api
      - postgres

  broker:
    build: ./broker_mqtt
    container_name: broker_mqtt
    ports:
      - "1883:1883"
    networks:
      - zotplug_net
    depends_on:
      - postgres

  api:
    build:
      context: .
      dockerfile: rest_api/Dockerfile
    env_file: ./.env
    container_name: rest_api
    profiles: ["prod"]
    expose:
      - "4000"
    networks:
      - zotplug_net
    depends_on:
      - postgres

  api-dev:
    build:
      context: .
      dockerfile: rest_api/Dockerfile
    env_file: ./.env
    container_name: rest_api_dev
    profiles: ["dev"]
    ports:
      - "4000:4000"
    networks:
      - zotplug_net
    depends_on:
      - postgres-dev

  cron:
    build: ./cron
    container_name: cron
    profiles: ["prod"]
    volumes:
      - /home/pg_db/backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - zotplug_net
    depends_on:
      - postgres

  postgres:
    image: postgres:alpine
    container_name: pg_db
    profiles: ["prod"]
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - zotplug_net
    volumes:
      - /home/pg_db/pgdata/:/var/lib/postgresql/data
      - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-dev:
    image: postgres:alpine
    container_name: pg_db_dev
    profiles: ["dev"]
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - zotplug_net
    volumes:
      - ${HOME}/pg_db/pgdata/:/var/lib/postgresql/data
      - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql

networks:
  zotplug_net:
    driver: bridge

